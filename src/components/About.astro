---
import { Icon } from 'astro-icon/components';

const skills = [
  { name: "Frontend", items: ["React", "Vue", "Next.js", "Nuxt.js", "Astro", "TypeScript", "Tailwind"] },
  { name: "Backend", items: ["Node.js", "Express", "PostgreSQL"] },
  { name: "Tools", items: ["Git", "Docker", "Figma", "VS Code", "Postman"] }
];

const experiences = [
  {
    role: "Frontend Developer",
    company: "Company Name",
    period: "2022 - Present",
    description: "Led frontend development for multiple projects, implementing responsive designs and optimizing performance.",
    tech: ["React", "TypeScript", "Tailwind"]
  },
  // Add more experiences
];

const education = {
  degree: "Bachelor of Computer Science",
  school: "University Name",
  year: "2018 - 2022",
  achievements: "Graduated with honors, Led development team in final project"
};
---

<section class="pt-20 bg-gradient-to-b" id="about">
  <div class="max-w-5xl mx-auto px-6">
    <!-- Header -->
    <div class="text-center mb-16 fade-up">
      <h2 class="text-4xl font-bold mb-4">
        <span class="text-5xl font-bold text-gray-900 mb-12">
          About Me
        </span>
      </h2>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Passionate frontend developer with a keen eye for design and a commitment to creating seamless user experiences.
      </p>
    </div>

    <!-- Profile Section -->
    <div class="grid md:grid-cols-2 gap-12 items-center mb-20">
      <div class="space-y-6 slide-in-left">
        <h3 class="text-2xl font-semibold">Hey there! ðŸ‘‹</h3>
        <p class="text-gray-600 leading-relaxed">
          I'm a frontend developer based in Indonesia with a passion for building digital experiences. I enjoy creating beautiful and functional websites that provide great user experiences.
        </p>
        <p class="text-gray-600 leading-relaxed">
          When I'm not coding, you can find me exploring new technologies, contributing to open-source projects, or sharing knowledge with the developer community.
        </p>
        <div class="flex gap-4">
          <a href="mailto:hello@ilhamya.dev" class="inline-flex items-center gap-2 px-6 py-3 bg-black text-white rounded-full hover:scale-105 transition-all duration-300">
            <Icon name="mdi:email" class="w-5 h-5" />
            Contact Me
          </a>
          <a href="https://drive.google.com/file/d/1F46kt64idFqyNJdY1lV9tyYIPD5-u1ov/view?usp=sharing" class="inline-flex items-center gap-2 px-6 py-3 border border-black/10 rounded-full hover:bg-black/5 transition-all duration-300">
            <Icon name="mdi:download" class="w-5 h-5" />
            Download CV
          </a>
        </div>
      </div>
      <div class="relative group slide-in-right">
        <div class="absolute inset-0 bg-gradient-to-r from-gray-600 to-gray-500 rounded-3xl blur-xl opacity-50 group-hover:opacity-75 transition-opacity duration-300"></div>
        <div class="relative w-full aspect-square rounded-3xl overflow-hidden">
          <img 
            src="/profile.jpg" 
            alt="Profile" 
            class="absolute inset-0 w-full h-full object-cover object-center object-position-[50%_30%]"
            style="object-position: 50% 5%;"
          />
        </div>
      </div>
    </div>

    <!-- Skills Section -->
    <div class="mb-20 fade-up">
      <h3 class="text-2xl font-semibold mb-8 text-center">Skills & Technologies</h3>
      <div class="grid md:grid-cols-3 gap-8">
        {skills.map((category, index) => (
          <div class={`bg-white p-6 rounded-2xl shadow-lg shadow-gray-100 fade-up-card`} style={`animation-delay: ${index * 200}ms`}>
            <h4 class="text-lg font-semibold mb-4">{category.name}</h4>
            <div class="flex flex-wrap gap-2">
              {category.items.map((skill, skillIndex) => (
                <span 
                  class="px-3 py-1 bg-black text-white rounded-full text-sm fade-in"
                  style={`animation-delay: ${(index * 200) + (skillIndex * 100)}ms`}
                >
                  {skill}
                </span>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
</section>

<style>
  /* Base styles for animations */
  .fade-up,
  .fade-up-card,
  .slide-in-left,
  .slide-in-right,
  .fade-in {
    opacity: 0;
    visibility: hidden;
  }

  /* Animation classes */
  .animate {
    opacity: 1;
    visibility: visible;
  }

  /* Keyframes */
  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Animation classes */
  .fade-up.animate {
    animation: fadeUp 0.6s ease forwards;
  }

  .fade-up-card.animate {
    animation: fadeUp 0.6s ease forwards;
  }

  .slide-in-left.animate {
    animation: slideInLeft 0.6s ease forwards;
  }

  .slide-in-right.animate {
    animation: slideInRight 0.6s ease forwards;
  }

  .fade-in.animate {
    animation: fadeIn 0.6s ease forwards;
  }

  /* Hover effects */
  .bg-white {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .bg-white:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  // Intersection Observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all animated elements
  document.querySelectorAll('.fade-up, .fade-up-card, .slide-in-left, .slide-in-right, .fade-in')
    .forEach(element => observer.observe(element));
</script>