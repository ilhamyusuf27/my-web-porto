---
let theme: string = "light";
---
<button class="theme-toggle" aria-label="Theme Toggle">
  <div class="switch">
    <div class="switch-track">
      <div class="switch-thumb">
        <span class="icon">
          {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}
        </span>
      </div>
    </div>
  </div>
</button>

<script>
  // Create a custom event for theme changes
  const themeChangeEvent = new Event('themeChange');

  // Get elements
  const themeToggles = document.querySelectorAll('.theme-toggle');
  const switchThumbs = document.querySelectorAll('.switch-thumb');
  const icons = document.querySelectorAll('.icon');

  // Initialize theme
  let theme = localStorage.getItem('theme') || 'light';
  
  // Set initial state
  if (theme === 'dark') {
    document.documentElement.classList.add('dark');
    switchThumbs.forEach(thumb => thumb.classList.add('switched'));
    icons.forEach(icon => {
      if (icon) icon.textContent = '‚òÄÔ∏è';
    });
  }

  // Handle click for all theme toggles
  themeToggles.forEach((toggle, index) => {
    toggle.addEventListener('click', () => {
      theme = theme === 'light' ? 'dark' : 'light';
      
      document.documentElement.classList.toggle('dark');
      switchThumbs.forEach(thumb => thumb.classList.toggle('switched'));
      localStorage.setItem('theme', theme);
      
      icons.forEach(icon => {
        if (icon) {
          icon.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
        }
      });

      // Dispatch the custom event
      document.dispatchEvent(themeChangeEvent);
    });
  });
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    position: relative;
  }

  .switch {
    display: inline-block;
    position: relative;
  }

  .switch-track {
    width: 3.5rem;
    height: 1.75rem;
    background-color: #e2e8f0;
    border-radius: 999px;
    transition: background-color 0.3s ease;
  }

  :global(.dark) .switch-track {
    background-color: #1a1a1a;
  }

  .switch-thumb {
    position: absolute;
    left: 0.2rem;
    top: 0.2rem;
    width: 1.35rem;
    height: 1.35rem;
    background-color: white;
    border-radius: 50%;
    transition: transform 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  }

  .switch-thumb.switched {
    transform: translateX(1.75rem);
  }

  .icon {
    font-size: 0.875rem;
    line-height: 1;
  }

  /* Hover effect */
  .theme-toggle:hover .switch-track {
    opacity: 0.8;
  }

  /* Focus styles */
  .theme-toggle:focus {
    outline: none;
  }

  .theme-toggle:focus .switch-track {
    box-shadow: 0 0 0 2px rgba(66, 153, 225, 0.5);
  }
</style>