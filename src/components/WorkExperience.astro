---
interface Experience {
  title: string;
  job: string;
  location: string;
  period: string;
  partTime?: boolean;
}
const experiences: Experience[] = [
  {
    title: "Tomps by Telkom Indonesia",
    job: "Frontend Web Developer",
    location: "Jakarta, Indonesia",
    period: "Feb 2023 - Present",
  },
  {
    title: "Telkom Indonesia - Frontend Web Developer",
    job: "Frontend Web Developer",
    location: "Jakarta, Indonesia, Remote",
    period: "Sep 2022 - Jan 2023",
  },
  {
    title: "Magister Health Policy and Management Faculty of Medicine UGM",
    job: "IT Assistant",
    location: "Yogyakarta, Indonesia",
    period: "Nov 2020 - Apr 2021",
  },
  {
    title: "Forum Asisten Universitas AMIKOM Yogyakarta",
    job: "Statistics Lab Assistant",
    location: "Yogyakarta, Indonesia",
    period: "Oct 2020 - Mar 2021",
    partTime: true
  },
];
---
<section class="mb-16 sm:mb-20 md:mb-24 lg:mb-28" id="experience">
  <div class="max-w-5xl mx-auto w-full px-4 sm:px-6 md:px-8 lg:px-10">
    <div class="flex flex-col md:flex-row md:gap-12 lg:gap-20 xl:gap-56">
      <h2 class="text-3xl sm:text-4xl md:text-5xl font-bold text-gray-900 mb-8 md:mb-0S top-24 text-primary">
        Work<br />Experience
      </h2>
    
      <div class="relative flex-1">
        {
          experiences.map((experience, index) => (
            <div 
              class="experience-item opacity-0 translate-y-8 relative pl-6 sm:pl-8 pb-8 sm:pb-12 last:pb-0 transition-all duration-700 ease-out"
              style={`transition-delay: ${index * 200}ms`}
            >
              {/* Timeline dot */}
              <div class="absolute left-0 top-2.5 w-2.5 sm:w-3 h-2.5 sm:h-3 border-2 border-white bg-gray-200 rounded-full" />
              
              {/* Timeline line */}
              {
                experiences.length - 1 > index && 
                <div class="absolute left-[4px] sm:left-[5px] top-6 w-0.5 h-[calc(100%-1.5px)] bg-gray-200" />
              }

              {/* Content */}
              <div class="group hover:translate-x-2 transition-transform duration-300">
                <h3 class="text-lg sm:text-xl font-semibold mb-1 text-primary">
                  {experience.title}
                </h3>
                <span class="text-sm sm:text-base block mb-1 text-primary">
                  {experience.job}
                </span>
                <div class="text-sm sm:text-base text-gray-600 flex flex-wrap gap-2 text-primary">
                  <span>{experience.location}</span>
                  <span class="hidden sm:inline">|</span>
                  <span>{experience.period}</span>
                  {experience.partTime && (
                    <>
                      <span class="hidden sm:inline">|</span>
                      <span>Part-time</span>
                    </>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  function setupAnimations() {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.remove('opacity-0', 'translate-y-8');
            entry.target.classList.add('opacity-100', 'translate-y-0');
          }
        });
      },
      {
        threshold: 0.1,
        rootMargin: '50px',
      }
    );
    
    document.querySelectorAll('.experience-item').forEach((item) => {
      observer.observe(item);
    });
  }

  // Run on initial load
  setupAnimations();
  
  // Run on view transitions
  document.addEventListener('astro:page-load', setupAnimations);
</script>

<style>
  .experience-item {
    will-change: transform, opacity;
  }

  /* Optional: Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
    scroll-padding-top: 2rem;
  }

  /* Optional: Improve timeline visibility on light backgrounds */
  @media (max-width: 640px) {
    .experience-item::before {
      content: '';
      position: absolute;
      left: 0;
      top: 2.5px;
      width: 10px;
      height: 10px;
      background: white;
      border-radius: 50%;
      z-index: -1;
    }
  }

  /* Optional: Add hover effects */
  /* @media (min-width: 768px) {
    .group:hover .text-gray-900 {
      color: theme('colors.purple.600');
    }
  } */

  /* Optional: Disable animations for users who prefer reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .experience-item {
      opacity: 1 !important;
      transform: none !important;
      transition: none !important;
    }
  }
</style>